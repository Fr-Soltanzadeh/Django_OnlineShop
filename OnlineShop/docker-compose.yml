services:
  redis:
    container_name: redis
    image: redis:latest
    networks:
      - main_net
    ports:
      - "6379:6379"
    restart: on-failure

  db:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_DB=online_shop
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Farzaneh72
    networks:
      - main_net
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/postgres_data

  celery_worker:
    container_name: celery_worker
    command: "celery -A OnlineShop worker -l INFO"
    depends_on:
      - redis
    build: .
    environment:
      - C_FORCE_ROOT="true"
    networks:
      - main_net
    restart: on-failure  

  djangoonlineshop:
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    container_name: djangoonlineshop
    volumes: 
      - .:/djangoonlineshop
    depends_on:
      - db
      - redis
    expose:
      - "8000"
    networks:
      - main_net
    ports:
      - "8000:8000"
    restart: on-failure

volumes:
  postgres_data:

networks:
  main_net: